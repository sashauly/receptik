interface Resources {
  translation: {
    common: {
      appName: "Receptik";
      loading: "Loading...";
      save: "Save";
      cancel: "Cancel";
      delete: "Delete";
      edit: "Edit";
      share: "Share";
      back: "Back";
      add: "Add";
      moreActions: "More Actions";
      addToFavorites: "Add to favorites";
      search: "Search";
      clear: "Clear";
      close: "Close";
      reset: "Reset";
      reload: "Reload";
      notFound: "Not found";
      today: "Today is";
      filters: "Filters";
      allRightsReserved: "All rights reserved";
      backToRecipes: "Back to Recipes";
      addRecipe: "Add Recipe";
      toHomePage: "Go to homepage";
      noRecipesFound: "No recipes found";
      noRecipesFoundDesc: "No recipes match {{searchQuery}}. Try adjusting your search or filters.";
      pageNotFound: "Page not found";
      pageNotFoundDesc: "The page you&apos;re looking for doesn&apos;t exist or has been removed.";
      gridView: "Grid View";
      listView: "List View";
      lastUpdated: "Updated";
      noResultsFound: "No results found";
      confirm: "Confirm";
      noDescription: "No description available";
    };
    navigation: {
      myRecipes: "My Recipes";
      mealPlan: "Meal Plan";
      importExport: "Import/Export";
      settings: "Settings";
    };
    desktop: {
      selectRecipe: "Select Recipe";
      viewDetailsPrompt: "View details for {{recipeTitle}}";
      viewSample: "View Sample";
    };
    home: {
      title: "My Recipes";
      loadingRecipes: "Loading Recipes...";
      errorLoadingRecipes: "Error loading recipes";
      subtitle: "Browse and manage your favorite recipes";
      noRecipes: "No recipes yet";
      addYourFirst: "Add your first recipe to get started";
      searchPlaceholder: "Search by name or keyword...";
      allRecipes: "All";
      createFirstRecipe: "Create First Recipe";
    };
    recipe: {
      title: "Recipe Details";
      ingredients: "Ingredients";
      ingredient_interval: "(1)[ingredient];(2-inf)[ingredients];";
      instructions: "Instructions";
      step: "Step";
      step_interval: "(1)[step];(2-inf)[steps];";
      prepTime: "Preparation Time";
      cookTime: "Cooking Time";
      totalTime: "Total Time";
      servings: "Servings";
      servings_interval: "(1)[serving];(2-inf)[servings];";
      keywords: "Keywords";
      recipeNotFound: "Recipe not found";
      recipeNotFoundDesc: "The recipe you're looking for doesn't exist or has been removed.";
      noKeywords: "No keywords";
      noImages: "No images";
      searchResults: "Results found: {{count}}";
    };
    settings: {
      title: "Settings";
      stayTuned: "Coming soon! Stay tuned for updates.";
      resetAllData: "Reset All Data";
      importRecipes: "Import Recipes";
      importing: "Importing...";
      appearance: "Appearance";
      dataManagement: "Data Management";
      debug: "Debug";
      exportSuccess: "All recipes exported as JSON";
      exportError: "Error exporting recipes";
      resetSuccess: "All data has been deleted";
      resetError: "Error deleting all data";
      resetConfirmationTitle: "Reset All Data";
      resetConfirmationDescription: "Are you sure you want to reset all data? This action cannot be undone.";
      importRecipesDesc: "Import recipes from a JSON file exported from Receptik or another compatible app.";
      exportAllRecipesDesc: "Export all your recipes as a JSON file for backup or sharing.";
      resetAllDataDesc: "Delete all your recipes and reset the app to its default state. This action cannot be undone.";
    };
    importRecipes: {
      selectFile: "Select File";
      noFileSelected: "Please select a JSON file.";
      notJsonFile: "Please select a valid JSON file.";
      errorReadingFile: "Error reading file.";
      errorParsingJson: "Error parsing JSON file. Please check its format.";
      invalidJsonFormat: "The JSON file does not contain a valid recipe or array of recipes.";
      noValidRecipesFound: "No valid recipes found in the selected file.";
      noValidRecipesInArray: "The selected file contains an array, but no valid recipes were found within it.";
      someInvalidRecipes: "Some items in the file were not valid recipes and were skipped.";
      success: "Successfully imported {{count}} recipes!";
      importFailed: "Import failed. See console for details.";
      preview: "Preview";
      previewFailed: "Failed to generate preview. See console for details.";
      previewTitle: "Preview Recipes";
      previewDescription: "Please review the recipes below before importing.";
      confirmImport: "Confirm Import ({{count}})";
      noRecipesToImport: "No recipes to import. Please select a file first.";
      moreIngredients: "and {{count}} more";
      moreInstructions: "and {{count}} more";
      processing: "Processing...";
      previewList: "Recipe preview list";
      tabs: {
        existing: "Existing";
        imported: "Imported";
        diff: "Diff";
      };
      diffDescription1: "Below is a field-by-field diff between the existing and imported recipe.";
      diffDescriptionRed: "Red lines";
      diffDescriptionGreen: "green lines";
      diffDescription2: "are old values,";
      diffDescription3: "are new values, and unchanged fields are shown normally.";
      duplicateTitle: "Duplicate for Recipe #{{num}} (matched by {{field}})";
      duplicatePrompt: "Please choose how to handle this duplicate:";
      duplicateUpdate: "Update";
      duplicateUpdateDesc: "Overwrite the existing recipe with the imported one.";
      duplicateSkip: "Skip";
      duplicateSkipDesc: "Do not import this recipe.";
      duplicateKeepBoth: "Keep Both";
      duplicateKeepBothDesc: "Import as a new recipe (with a new id and slug).";
      previewInvalidFields: "Some fields in this imported recipe are invalid:";
    };
    forms: {
      createRecipe: "Create New Recipe";
      editRecipe: "Edit Recipe";
      createRecipeDescription: "Create a new recipe";
      editRecipeDescription: "Edit an existing recipe";
      recipeName: "Recipe Name";
      namePlaceholder: "Enter recipe name";
      author: "Author";
      authorPlaceholder: "Enter author name";
      description: "Description";
      descriptionPlaceholder: "A brief description of your recipe...";
      prepTime: "Prep Time";
      cookTime: "Cook Time";
      totalTime: "Total Time";
      presetDuration: "Cooking Duration";
      presetDurationPlaceholder: "Choose a preset duration";
      durationPresets: {
        quick: "Quick (5m)";
        short: "Short (15m)";
        medium: "Medium (30m)";
        long: "Long (1h)";
        veryLong: "Very Long (2h)";
      };
      noDuration: "No duration set";
      servings: "Servings";
      servingsPlaceholder: "e.g. 4";
      keywords: "Keywords";
      keywordsPlaceholder: "Add a keyword (e.g. grandma, affordable)";
      cuisine: "Cuisine";
      cuisinePlaceholder: "Add a cuisine (e.g. American, Italian)";
      category: "Category";
      categoryPlaceholder: "Add a category (e.g. Vegetarian, Dessert)";
      ingredients: "Ingredients";
      ingredientName: "Ingredient Name";
      ingredientNamePlaceholder: "Ingredient name";
      ingredientAmount: "Amount";
      ingredientUnit: "Unit";
      ingredientPlaceholder: "Ingredient {{index}}";
      addIngredient: "Add Ingredient";
      deleteIngredient: "Delete Ingredient";
      cancelIngredient: "Cancel Ingredient";
      saveIngredient: "Save Ingredient";
      instructions: "Instructions";
      stepPlaceholder: "Step {{index}}";
      addStep: "Add Step";
      saveRecipe: "Save Recipe";
      failedToSubmit: "Failed to submit the form. Please try again.";
      selectUnit: "Select Unit";
      images: "Images";
      uploadImages: "Upload Images";
      uploading: "Uploading...";
      uploadedImages: "Uploaded Images";
      removeImage: "Remove image {{name}}";
      imageUploadDescription: "Upload images for your recipe. Supported formats: JPEG, PNG, WebP. Maximum size: 5MB.";
      imageUploadSuccess: "Image uploaded successfully";
      imageUploadError: "Failed to upload image";
      imageRemoved: "Image removed";
      imagePreview: "Preview of {{name}}";
      imageUploadButton: "Choose images to upload";
      imageUploadButtonDescription: "Click to select images from your device";
      imagesCount: "{{current}}/{{max}} images";
    };
    validation: {
      nameTooShort: "Recipe name must be at least 2 characters.";
      nameTooLong: "Recipe name must not exceed 50 characters.";
      authorTooShort: "Author name must be at least 1 character.";
      authorTooLong: "Author name must not exceed 50 characters.";
      descriptionTooLong: "Description must not exceed 500 characters.";
      prepTimeInvalid: "Please enter a valid preparation time.";
      cookTimeEmpty: "Cooking time cannot be empty.";
      cookTimeInvalid: "Please enter a valid cooking time.";
      servingsTooFew: "Servings must be at least 1.";
      servingsTooMany: "Servings must be at most 100.";
      ingredientRequired: "At least one ingredient is required.";
      ingredientNameRequired: "Ingredient name is required.";
      ingredientAmountRequired: "Amount is required and must be a positive number for this unit.";
      instructionRequired: "At least one instruction step is required.";
      instructionStepRequired: "Instruction step is required.";
      invalidFileType: "Invalid file type";
      allowedImageTypes: "Only JPEG, PNG, and WebP images are allowed";
      fileTooLarge: "File is too large";
      maxFileSize: "Maximum file size is {{size}}";
      uploadFailed: "Failed to upload image";
      tryAgain: "Please try again";
      tooManyImages: "Too many images";
      maxImages: "Maximum {{count}} images allowed";
    };
    modals: {
      deleteRecipe: "Delete Recipe";
      deleteRecipeConfirm: "Are you sure you want to delete {{recipeTitle}}? This action cannot be undone.";
      shareRecipe: "Share Recipe";
      shareRecipeDesc: "Share {{recipeTitle}} with friends and family";
    };
    share: {
      link: "Link";
      social: "Social";
      export: "Export";
      text: "Text";
      email: "Email";
      image: "Image";
      twitter: "Twitter";
      facebook: "Facebook";
      exportThisRecipe: "Export this recipe";
      exportAllRecipes: "Export all recipes as JSON";
      exportAllAsJson: "Export All";
    };
    theme: {
      label: "Theme";
      light: "Light";
      dark: "Dark";
      system: "System";
    };
    language: {
      label: "Language";
      supported: {
        en: "English";
        ru: "Russian";
      };
    };
    time: {
      hours: "Hours";
      minutes: "Minutes";
      seconds: "Seconds";
      hourShort: "h";
      minuteShort: "m";
      secondShort: "s";
      hour_interval: "(1)[hour];(2-inf)[hours];";
      minute_interval: "(1)[minute];(2-inf)[minutes];";
      lessThanMinute: "less than a minute";
      invalid: "Invalid duration";
    };
    timer: {
      setTimerTitle: "Set Timer";
      setTimerDescription: "Enter the duration for your timer.";
      setTimer: "Set Timer";
      clearTimer: "Clear Timer";
      start: "Start";
      pause: "Pause";
      resume: "Resume";
      reset: "Reset";
      notification: {
        startTitle: "Timer Running";
        startBody: "Your timer is now active.";
        endTitle: "Timer Complete!";
        endBody: "Your timer has finished.";
      };
    };
    reloadPrompt: {
      readyForOfflineUse: "App ready for offline use";
      newUpdateAvailable: "New update available";
      offlineDescription: "You can now use the app even without an internet connection.";
      updateDescription: 'Click "Reload" to get the latest version of the app.';
    };
    installPrompt: {
      installApp: "Install App";
      howToInstall: "How to Install";
      installAppDescription: "While direct installation isn't supported on your browser, you can still add this app to your home screen for quick access.";
      instructions: {
        title: "Instructions:";
        chrome: '**Chrome/Edge on Android:** Tap the three dots menu in the top-right and select "Add to Home screen".';
        safari: '**Safari on iOS:** Tap the Share button (square with an arrow pointing up) and select "Add to Home Screen".';
        other: '**Other Browsers/Platforms:** Look for an "Add to Home screen", "Install app", or similar option in your browser\'s menu.';
      };
      stepsMayVary: " These steps may vary slightly depending on your browser and device.";
    };
    units: {
      volume: {
        ml: "milliliter";
        ml_short: "ml";
        ml_interval: "(1)[milliliter];(2-inf)[milliliters];";
        l: "liter";
        l_short: "L";
        l_interval: "(1)[liter];(2-inf)[liters];";
        "metric-cup": "metric cup";
        "metric-cup_short": "cup (metric)";
        "metric-cup_interval": "(1)[metric cup];(2-inf)[metric cups];";
        tbsp: "tablespoon";
        tbsp_short: "tbsp";
        tbsp_interval: "(1)[tablespoon];(2-inf)[tablespoons];";
        tsp: "teaspoon";
        tsp_short: "tsp";
        tsp_interval: "(1)[teaspoon];(2-inf)[teaspoons];";
        "gal-us": "gallon (US)";
        "gal-us_short": "gal (US)";
        "gal-us_interval": "(1)[gallon];(2-inf)[gallons];";
        "qt-us": "quart (US)";
        "qt-us_short": "qt (US)";
        "qt-us_interval": "(1)[quart];(2-inf)[quarts];";
        "pt-us": "pint (US)";
        "pt-us_short": "pt (US)";
        "pt-us_interval": "(1)[pint];(2-inf)[pints];";
        "cup-us": "cup (US)";
        "cup-us_short": "cup (US)";
        "cup-us_interval": "(1)[cup];(2-inf)[cups];";
        "fl-oz-us": "fluid ounce (US)";
        "fl-oz-us_short": "fl oz (US)";
        "fl-oz-us_interval": "(1)[fluid ounce];(2-inf)[fluid ounces];";
        "tbsp-us": "tablespoon (US)";
        "tbsp-us_short": "tbsp (US)";
        "tbsp-us_interval": "(1)[tablespoon];(2-inf)[tablespoons];";
        "tsp-us": "teaspoon (US)";
        "tsp-us_short": "tsp (US)";
        "tsp-us_interval": "(1)[teaspoon];(2-inf)[teaspoons];";
        oz: "ounce";
        oz_short: "oz";
        oz_interval: "(1)[ounce];(2-inf)[ounces];";
        "gal-imp": "gallon (Imperial)";
        "gal-imp_short": "gal (imp)";
        "gal-imp_interval": "(1)[gallon];(2-inf)[gallons];";
        "qt-imp": "quart (Imperial)";
        "qt-imp_short": "qt (imp)";
        "qt-imp_interval": "(1)[quart];(2-inf)[quarts];";
        "pt-imp": "pint (Imperial)";
        "pt-imp_short": "pt (imp)";
        "pt-imp_interval": "(1)[pint];(2-inf)[pints];";
        "cup-imp": "cup (Imperial)";
        "cup-imp_short": "cup (imp)";
        "cup-imp_interval": "(1)[cup];(2-inf)[cups];";
        "fl-oz-imp": "fluid ounce (Imperial)";
        "fl-oz-imp_short": "fl oz (imp)";
        "fl-oz-imp_interval": "(1)[fluid ounce];(2-inf)[fluid ounces];";
        "tbsp-imp": "tablespoon (Imperial)";
        "tbsp-imp_short": "tbsp (imp)";
        "tbsp-imp_interval": "(1)[tablespoon];(2-inf)[tablespoons];";
        "tsp-imp": "teaspoon (Imperial)";
        "tsp-imp_short": "tsp (imp)";
        "tsp-imp_interval": "(1)[teaspoon];(2-inf)[teaspoons];";
      };
      weight: {
        kg: "kilogram";
        kg_short: "kg";
        kg_interval: "(1)[kilogram];(2-inf)[kilograms];";
        g: "gram";
        g_short: "g";
        g_interval: "(1)[gram];(2-inf)[grams];";
        lb: "pound";
        lb_short: "lb";
        lb_interval: "(1)[pound];(2-inf)[pounds];";
        oz: "ounce";
        oz_short: "oz";
        oz_interval: "(1)[ounce];(2-inf)[ounces];";
      };
      length: {
        mm: "millimeter";
        mm_short: "mm";
        mm_interval: "(1)[millimeter];(2-inf)[millimeters];";
        cm: "centimeter";
        cm_short: "cm";
        cm_interval: "(1)[centimeter];(2-inf)[centimeters];";
        m: "meter";
        m_short: "m";
        m_interval: "(1)[meter];(2-inf)[meters];";
        yd: "yard (US)";
        yd_short: "yd (US)";
        yd_interval: "(1)[yard];(2-inf)[yards];";
        ft: "foot (US)";
        ft_short: "ft (US)";
        ft_interval: "(1)[foot];(2-inf)[feet];";
        in: "inch (US)";
        in_short: "in (US)";
        in_interval: "(1)[inch];(2-inf)[inches];";
        "yd-imp": "yard (Imperial)";
        "yd-imp_short": "yd (imp)";
        "yd-imp_interval": "(1)[yard];(2-inf)[yards];";
        "ft-imp": "foot (Imperial)";
        "ft-imp_short": "ft (imp)";
        "ft-imp_interval": "(1)[foot];(2-inf)[feet];";
        "in-imp": "inch (Imperial)";
        "in-imp_short": "in (imp)";
        "in-imp_interval": "(1)[inch];(2-inf)[inches];";
      };
      other: {
        piece: "piece";
        piece_interval: "(1)[piece];(2-inf)[pieces];";
        clove: "clove";
        clove_interval: "(1)[clove];(2-inf)[cloves];";
        leaf: "leaf";
        leaf_interval: "(1)[leaf];(2-inf)[leaves];";
        feather: "feather";
        feather_interval: "(1)[feather];(2-inf)[feathers];";
        pinch: "pinch";
        pinch_interval: "(1)[pinch];(2-inf)[pinches];";
        sprig: "sprig";
        sprig_interval: "(1)[sprig];(2-inf)[sprigs];";
        head: "head";
        head_interval: "(1)[head];(2-inf)[heads];";
        slice: "slice";
        slice_interval: "(1)[slice];(2-inf)[slices];";
        drop: "drop";
        drop_interval: "(1)[drop];(2-inf)[drops];";
        toTaste: "to taste";
        optional: "optional";
      };
    };
    errorBoundary: {
      errorInComponent: "Error in {{componentName}}";
      refresh: "Refresh Page";
      resetData: "Reset All Data";
      resetDataConfirm: "Are you sure you want to reset all data? This action cannot be undone and will delete all your recipes and settings.";
      showErrorDetails: "Show Error Details";
      time: "Time";
      message: "Message";
      stackTrace: "Stack Trace";
      componentStack: "Component Stack";
    };
  };
}

export default Resources;
